rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Groups - members can read, creators can write
    match /groups/{groupId} {
      allow read: if request.auth != null && 
        (request.auth.uid in resource.data.members || 
         request.auth.uid == resource.data.createdBy);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.createdBy;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.createdBy;
    }
    
    // Forms - group members can read, creators can write
    match /forms/{formId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.createdBy || 
         request.auth.uid in get(/databases/$(database)/documents/groups/$(resource.data.groupId)).data.members);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.createdBy;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.createdBy;
    }
    
    // Form responses - respondents can write, form creators can read
    match /formResponses/{responseId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.respondentId || 
         request.auth.uid == get(/databases/$(database)/documents/forms/$(resource.data.formId)).data.createdBy);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.respondentId;
      allow update: if request.auth != null && 
        request.auth.uid == resource.data.respondentId;
    }
    
    // Events - group members can read, creators can write
    match /events/{eventId} {
      allow read: if request.auth != null && 
        (resource.data.visibility == 'public' || 
         request.auth.uid == resource.data.createdBy ||
         (resource.data.groupId != null && 
          request.auth.uid in get(/databases/$(database)/documents/groups/$(resource.data.groupId)).data.members));
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.createdBy;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.createdBy;
    }
    
    // Announcements - group members can read, creators can write
    match /announcements/{announcementId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.createdBy ||
         request.auth.uid in get(/databases/$(database)/documents/groups/$(resource.data.groupId)).data.members);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.createdBy;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.createdBy;
    }
    
    // Resources - group members can read, creators can write
    match /resources/{resourceId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.createdBy ||
         request.auth.uid in get(/databases/$(database)/documents/groups/$(resource.data.groupId)).data.members);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.createdBy;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.createdBy;
    }
  }
}
